name: Update Filter Lists

on:
  workflow_dispatch:
    inputs:
      fresh:
        required: false
        description: Force re-create all lists and rules
        type: boolean
        default: false
  schedule:
    - cron: "0 3 * * *"
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_ENV: production

jobs:
  custom:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get blocklist
        id: blocklist
        run: |
          response=$(curl -sf "https://api.cloudflare.com/client/v4/accounts/${{ secrets.CLOUDFLARE_ACCOUNT_ID }}/gateway/lists" \
            -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_API_TOKEN }}" \
            -H "Content-Type: application/json")

          list_json=$(echo "$response" | jq -c '.result[] | select(.name=="Custom Blocklist")')

          if [ -z "$list_json" ]; then
            echo "List could not be found"
            exit 1
          fi

          echo "json=$list_json" | tee -a "$GITHUB_OUTPUT"

      - name: Update blocklist
        run: |
          LIST_ITEMS="$(grep -v '^[#!]' blocklist.txt | jq -Rsc 'split("\n") | map(select(length > 0)) | map({value: .})')"
          UPDATED_LIST="$(echo ${{ toJson(steps.blocklist.outputs.json) }} | jq --argjson items "$LIST_ITEMS" '.items = $items')"
          echo "UPDATED_LIST"
          LIST_ID="$(echo "$UPDATED_LIST" | jq -r '.id')"
          curl -sf -X PUT "https://api.cloudflare.com/client/v4/accounts/${{ secrets.CLOUDFLARE_ACCOUNT_ID }}/gateway/lists/$LIST_ID" \
            -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            --data-raw "$UPDATED_LIST" \
            -w "HTTP Status: %{http_code}"

  cgps:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: mrrfv/cloudflare-gateway-pihole-scripts
          # testing https://github.com/mrrfv/cloudflare-gateway-pihole-scripts/pull/144
          ref: refs/pull/144/merge

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version

      - name: Install npm dependencies
        run: npm ci

      - name: Download allowlists
        run: npm run download:allowlist
        env:
          ALLOWLIST_URLS: |
            ${{ github.server_url }}/${{ github.repository }}/raw/${{ github.sha }}/allowlist.txt

      - name: Download blocklists
        run: npm run download:blocklist
        env:
          BLOCKLIST_URLS: |
            ${{ github.server_url }}/${{ github.repository }}/raw/${{ github.sha }}/blocklist.txt
            https://small.oisd.nl

      - name: Delete old rules and lists
        if: inputs.fresh
        run: npm run cloudflare-delete
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Create new rules and lists
        run: npm run cloudflare-create
        env:
          BLOCK_PAGE_ENABLED: 1
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}

  keepalive:
    runs-on: ubuntu-latest
    permissions:
      actions: write
    steps:
      - uses: actions/checkout@v4
      - uses: gautamkrishnar/keepalive-workflow@v2
